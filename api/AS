
{
  "nodes": [
    {
      "parameters": {
        "path": "klube-cash-transaction",
        "options": {}
      },
      "id": "205e8577-b83a-4cc2-9a4f-d6b601182c18",
      "name": "Webhook Klube Cash",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -80,
        96
      ],
      "webhookId": "c64b415c-71c9-419d-8846-51dd1b65477b"
    },
    {
      "parameters": {
        "functionCode": "// Validar assinatura e dados\nconst items = $input.all();\nconst webhookSecret = 'klube-cash-secret-2024';\n\nfor (const item of items) {\n  const data = item.json;\n  \n  // Verificar assinatura se presente\n  if (data.signature) {\n    const crypto = require('crypto');\n    const payloadForSignature = JSON.stringify({\n      evento: data.evento,\n      timestamp: data.timestamp,\n      source: data.source,\n      transacao: data.transacao,\n      cliente: data.cliente,\n      loja: data.loja,\n      liberacao: data.liberacao\n    });\n    \n    const expectedSignature = crypto.createHmac('sha256', payloadForSignature, webhookSecret).digest('hex');\n    \n    if (data.signature !== expectedSignature) {\n      console.log('Assinatura inv√°lida:', data.signature, 'vs', expectedSignature);\n      throw new Error('Assinatura inv√°lida');\n    }\n  }\n  \n  // Validar dados obrigat√≥rios\n  if (!data.transacao || !data.cliente || !data.loja) {\n    throw new Error('Dados incompletos no webhook');\n  }\n  \n  // Validar telefone\n  const telefone = data.cliente.telefone;\n  if (!telefone || telefone.length < 10) {\n    throw new Error('Telefone inv√°lido: ' + telefone);\n  }\n  \n  console.log('Webhook validado:', data.evento, 'para transa√ß√£o', data.transacao.id);\n}\n\nreturn items;"
      },
      "id": "3f9c749d-e3a0-43b8-b6c0-43c91474e7ae",
      "name": "Valida√ß√£o",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        144,
        96
      ]
    },
    {
      "parameters": {
        "functionCode": "// Construir mensagem personalizada\nconst items = $input.all();\n\nfor (const item of items) {\n  const data = item.json;\n  const transacao = data.transacao;\n  const cliente = data.cliente;\n  const loja = data.loja;\n  const evento = data.evento;\n  \n  // Formata√ß√£o de valores\n  const valorCashback = parseFloat(transacao.valor_cashback).toLocaleString('pt-BR', {\n    style: 'currency', \n    currency: 'BRL'\n  });\n  \n  const valorUsado = parseFloat(transacao.valor_saldo_usado || 0).toLocaleString('pt-BR', {\n    style: 'currency', \n    currency: 'BRL'\n  });\n  \n  let message = '';\n  \n  if (evento === 'nova_transacao') {\n    if (transacao.tipo === 'mvp' && transacao.valor_saldo_usado > 0) {\n      // Transa√ß√£o MVP\n      message = `üéØ *Klube Cash - Compra MVP Realizada*\\n\\nOl√° ${cliente.nome}! üëã\\n\\n‚úÖ Sua compra na loja *${loja.nome}* foi registrada com sucesso!\\n\\nüí∞ *Saldo utilizado:* ${valorUsado}\\nüéÅ *Novo cashback:* ${valorCashback} (pendente)\\n\\nüîÑ Parab√©ns por usar nosso programa MVP! Voc√™ economizou usando seu saldo e ainda ganhou mais cashback.\\n\\n‚è∞ O cashback ficar√° dispon√≠vel ap√≥s a aprova√ß√£o do pagamento pela loja.\\n\\nüì± Continue acompanhando no app Klube Cash!`;\n    } else {\n      // Transa√ß√£o normal\n      message = `üîî *Klube Cash - Novo Cashback Gerado*\\n\\nParab√©ns ${cliente.nome}! üéâ\\n\\nNova transa√ß√£o registrada na loja *${loja.nome}*:\\n\\nüíé *Cashback gerado:* ${valorCashback}\\nüìÖ *Data:* ${new Date(transacao.data_criacao).toLocaleDateString('pt-BR')}\\n\\n‚úÖ O cashback ficar√° dispon√≠vel ap√≥s a aprova√ß√£o do pagamento pela loja.\\n\\nüí∞ Baixe o app e acompanhe seu saldo em tempo real!`;\n    }\n  } else if (evento === 'cashback_liberado') {\n    // Cashback liberado\n    message = `üéâ *Cashback Liberado - Klube Cash*\\n\\n√ìtimas not√≠cias ${cliente.nome}! üéä\\n\\n‚úÖ Seu cashback da loja *${loja.nome}* foi liberado!\\n\\nüí∞ *Valor dispon√≠vel:* ${valorCashback}\\n\\nüõí Agora voc√™ pode usar este valor em uma nova compra na mesma loja.\\n\\nüì± Acesse o app Klube Cash e aproveite seu saldo!`;\n  }\n  \n  item.json.mensagem = {\n    texto: message,\n    telefone: cliente.telefone,\n    nome: cliente.nome,\n    evento: evento,\n    transacao_id: transacao.id\n  };\n}\n\nreturn items;"
      },
      "id": "0e5e0faf-32c2-4fa6-931b-0b0701d63f34",
      "name": "Construir Mensagem",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        368,
        96
      ]
    },
    {
      "parameters": {
        "url": "https://evolutionapi.klubecash.com/message/sendText/KluebCash",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "HONejkqQLlxZoeYiaQxmUczVRTdqscw2"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.mensagem.telefone }}"
            },
            {
              "name": "text",
              "value": "={{ $json.mensagem.texto }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dc4cca03-f64d-49c4-a55b-c0b91dbc53ce",
      "name": "Enviar WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        592,
        96
      ]
    },
    {
      "parameters": {
        "functionCode": "// Processar resposta e fazer log\nconst items = $input.all();\n\nfor (const item of items) {\n  const requestData = item.json;\n  \n  // Dados da resposta da Evolution API\n  const success = !requestData.error && requestData.key;\n  \n  // Log estruturado\n  const logData = {\n    timestamp: new Date().toISOString(),\n    transaction_id: requestData.mensagem?.transacao_id,\n    event: requestData.mensagem?.evento,\n    client_name: requestData.mensagem?.nome,\n    client_phone: requestData.mensagem?.telefone,\n    whatsapp_success: success,\n    message_id: requestData.key?.id || null,\n    error: requestData.error || null\n  };\n  \n  console.log('WhatsApp N8N Result:', JSON.stringify(logData));\n  \n  item.json.n8n_result = {\n    success: success,\n    transaction_id: requestData.mensagem?.transacao_id,\n    message_id: requestData.key?.id || null,\n    timestamp: new Date().toISOString()\n  };\n}\n\nreturn items;"
      },
      "id": "d7700b06-b131-4311-9c50-8b39690f6dce",
      "name": "Log Resposta",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        800,
        96
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json.n8n_result }}",
        "options": {}
      },
      "id": "370f0550-9301-460c-bff6-0c5933e1ce17",
      "name": "Resposta Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1024,
        96
      ]
    }
  ],
  "connections": {
    "Webhook Klube Cash": {
      "main": [
        [
          {
            "node": "Valida√ß√£o",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valida√ß√£o": {
      "main": [
        [
          {
            "node": "Construir Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Construir Mensagem": {
      "main": [
        [
          {
            "node": "Enviar WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar WhatsApp": {
      "main": [
        [
          {
            "node": "Log Resposta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Resposta": {
      "main": [
        [
          {
            "node": "Resposta Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "bdf69a7175cf228eac8444d6787bf90394a1c85f4f9c3c5e5e2e27338a751f60"
  }
}