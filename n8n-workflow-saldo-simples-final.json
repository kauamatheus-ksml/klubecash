{
  "name": "Klube Cash - Saldo Simples",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "saldo-simples",
        "responseMode": "responseNode"
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [240, 300],
      "id": "webhook",
      "name": "Webhook"
    },
    {
      "parameters": {
        "jsCode": "// Extrair telefone da mensagem\nconst data = $input.all()[0].json;\nlet telefone = '';\nlet mensagem = '';\n\n// Tentar diferentes formatos de webhook\nif (data.data?.key?.remoteJid) {\n  // Evolution API\n  telefone = data.data.key.remoteJid.replace('@s.whatsapp.net', '').replace('@c.us', '');\n  mensagem = data.data.message?.conversation || data.data.message?.extendedTextMessage?.text || '';\n} else if (data.body?.payload?.from) {\n  // WAHA\n  telefone = data.body.payload.from.replace('@c.us', '');\n  mensagem = data.body.payload.body || '';\n} else if (data.phone) {\n  // Direto\n  telefone = data.phone;\n  mensagem = data.message || 'saldo';\n}\n\n// Verificar se √© consulta de saldo\nconst isConsultaSaldo = mensagem.toLowerCase().includes('saldo') || \n                       mensagem.toLowerCase().includes('extrato') || \n                       mensagem.trim() === '1';\n\nreturn {\n  telefone: telefone,\n  mensagem: mensagem,\n  processarSaldo: isConsultaSaldo ? 'true' : 'false'  // ‚Üê CONVERTIDO PARA STRING\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300],
      "id": "processar",
      "name": "Processar"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.processarSaldo }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300],
      "id": "verificar",
      "name": "√â Saldo?"
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "usuarios",
          "mode": "name"
        },
        "where": {
          "values": [
            {
              "column": "telefone",
              "condition": "=",
              "value": "={{ $json.telefone || 'vazio' }}"
            }
          ]
        },
        "limit": 1
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2,
      "position": [900, 240],
      "id": "buscar-usuario",
      "name": "Buscar Usu√°rio"
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "cashback_saldos",
          "mode": "name"
        },
        "where": {
          "values": [
            {
              "column": "user_id",
              "condition": "=",
              "value": "={{ $json[0] ? $json[0].id : 0 }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2,
      "position": [1120, 240],
      "id": "buscar-saldos",
      "name": "Buscar Saldos"
    },
    {
      "parameters": {
        "jsCode": "// Processar resposta simples\nconst usuario = $('Buscar Usu√°rio').first().json[0];\nconst saldos = $input.all()[0].json;\nconst telefone = $('Processar').first().json.telefone;\n\nlet resposta = '';\n\nif (!usuario) {\n  resposta = `‚ùå Usu√°rio n√£o encontrado para ${telefone}`;\n} else if (!saldos || saldos.length === 0) {\n  resposta = `üëã Ol√° ${usuario.nome}!\\nüí∞ Saldo: R$ 0,00`;\n} else {\n  const total = saldos.reduce((sum, s) => sum + parseFloat(s.valor || 0), 0);\n  resposta = `üëã Ol√° ${usuario.nome}!\\nüí∞ Saldo Total: R$ ${total.toFixed(2)}`;\n}\n\nreturn {\n  telefone: telefone,\n  resposta: resposta\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 240],
      "id": "gerar-resposta",
      "name": "Gerar Resposta"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evolutionapi.klubecash.com/message/sendText/KluebCash",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "HONejkqQLlxZoeYiaQxmUczVRTdqscw2"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={\n  \"number\": \"{{ $json.telefone }}\",\n  \"text\": \"{{ $json.resposta }}\"\n}",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1560, 240],
      "id": "enviar",
      "name": "Enviar"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "‚úÖ Processado com sucesso",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/plain; charset=utf-8"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1780, 300],
      "id": "resposta",
      "name": "Resposta"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "‚è≠Ô∏è Mensagem ignorada",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/plain; charset=utf-8"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 400],
      "id": "ignorar",
      "name": "Ignorar"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Processar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Processar": {
      "main": [
        [
          {
            "node": "√â Saldo?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "√â Saldo?": {
      "main": [
        [
          {
            "node": "Buscar Usu√°rio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ignorar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Usu√°rio": {
      "main": [
        [
          {
            "node": "Buscar Saldos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Saldos": {
      "main": [
        [
          {
            "node": "Gerar Resposta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar Resposta": {
      "main": [
        [
          {
            "node": "Enviar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar": {
      "main": [
        [
          {
            "node": "Resposta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "saldo-simples-final"
}